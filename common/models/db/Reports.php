<?php

namespace common\models\db;

use Yii;

/**
 * This is the model class for table "reports".
 *
 * @property integer $id
 * @property integer $report_type_id
 * @property integer $dt_add
 * @property integer $dt_update
 *
 * @property ReportType $reportType
 */
class Reports extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'reports';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['report_type_id'], 'required'],
            [['report_type_id', 'dt_add', 'dt_update'], 'integer'],
            [['report_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => ReportType::className(), 'targetAttribute' => ['report_type_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'report_type_id' => 'Тип отчета',
            'dt_add' => 'Дата добавления',
            'dt_update' => 'Дата редактирования',
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        CustomFieldValue::deleteAll(['reports_id'=>$this->id]);
        $cf = Yii::$app->request->post('CF');
        foreach ((array)$cf as $key => $value){
            $cfv = new CustomFieldValue();
            $cfv->reports_id = $this->id;
            $cfv->report_type_id = $this->report_type_id;
            $cfv->cf_key = $key;
            $cfv->cf_value = is_array($value) ? json_encode($value) : $value;
            $cfv->save();
        }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getReportType()
    {
        return $this->hasOne(ReportType::className(), ['id' => 'report_type_id']);
    }
}
