<?php

namespace common\models\db;

use common\classes\Debug;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "report_type".
 *
 * @property integer $id
 * @property string $title
 *
 * @property ReportTypeCustomFields[] $reportTypeCustomFields
 * @property CustomFields[] $customFields
 */
class ReportType extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'report_type';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['title'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Название',
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        ReportTypeCustomFields::deleteAll(['report_type_id' => $this->id]);
        $cf = Yii::$app->request->post('custom_fields');
        foreach ((array)$cf as $item) {
            $model = new ReportTypeCustomFields();
            $model->report_type_id = $this->id;
            $model->custom_fields_id = $item;
            $model->save();
        }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getReportTypeCustomFields()
    {
        return $this->hasMany(ReportTypeCustomFields::className(), ['report_type_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomFields()
    {
        return $this->hasMany(CustomFields::className(),
            ['id' => 'custom_fields_id'])->viaTable('report_type_custom_fields', ['report_type_id' => 'id']);
    }

    public function getCurrentCustomFieldsIds()
    {
        return ArrayHelper::getColumn($this->getReportTypeCustomFields()->all(),'custom_fields_id');
    }
}
